#!/usr/bin/env perl

# Copyright (c) 2020-present, author: Zhengyang Liu (liuz@cs.utah.edu).
# Distributed under the MIT license that can be found in the LICENSE file.

use warnings;
use strict;
use File::Temp;

if ($0 =~ /minotaur-cc$/) {
  unshift @ARGV, "@LLVM_BINARY_DIR@/bin/clang";
} elsif ($0 =~ /minotaur-c\+\+$/) {
  unshift @ARGV, "@LLVM_BINARY_DIR@/bin/clang++";
} else {
  die "Didn't expect minotuar-cc to be invoked as '$0'";
}

foreach my $arg (@ARGV) {
  if ($arg eq "-help" || $arg eq "--help") {
    print <<EOF;
HELP MESSAGE TO BE ADDED
EOF
    exit(-1);
  }
}

sub is_compiling() {
  foreach my $arg (@ARGV) {
    return 1 if ($arg =~ /\.c$|\.cpp$|\.CC$|\.c\+\+$|\.cc$|\.cxx$|\.C$|\.c\+$/);
  }
  return 0;
}

my $minotaur = 1;
$minotaur = 0 unless exists($ENV{"ENABLE_MINOTAUR"}) && is_compiling();

if ($minotaur) {
  # the first one is necessary to make plugin command line args work
  push @ARGV, ("-Xclang", "-load", "-Xclang", "@ONLINE_PASS@");
  push @ARGV, ("-fpass-plugin=@ONLINE_PASS@");
}

my %whitelist = ();
sub getenv($) {
    (my $e) = @_;
    die "oops '$e'" unless $e =~ /^MINOTAUR_/;
    $whitelist{$e} = 1;
    return undef unless exists($ENV{$e});
    return $ENV{$e};
}

if (getenv("MINOTAUR_DEBUG_SLICER")) {
  push @ARGV, ("-mllvm", "-minotaur-debug-slicer");
  push @ARGV, ("-mllvm", "-minotaur-dryrun");
}

exec @ARGV;